/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VirtueQuest, VirtueQuestInterface } from "../VirtueQuest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "DiceLanded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "roller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "DiceRolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameWon",
    type: "event",
  },
  {
    inputs: [],
    name: "contractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "diceRolling",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getPlayerPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "isGameActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
    ],
    name: "setNFTContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "startGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040527f474e34a077df58807dbe9c96d3c009b23b3c6d0cce433e59bbf5b34f823bc56c600155600280546001600160501b0319166601000300009c4017905534801561004d57600080fd5b50604051610e08380380610e0883398101604081905261006c91610114565b6001600160a01b0390811660808190526000805460028054600160501b600160f01b031916336a0100000000000000000000021790556001600160e01b0319168217600160a01b6001600160401b0396909616959095029490941790935560a092909252600780546001600160a01b031990811692909316918217905560038054909216179055610165565b80516001600160a01b038116811461010f57600080fd5b919050565b60008060006060848603121561012957600080fd5b83516001600160401b038116811461014057600080fd5b925061014e602085016100f8565b915061015c604085016100f8565b90509250925092565b60805160a051610c7a61018e600039600050506000818161019001526101d20152610c7a6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a7ccabdf1161005b578063a7ccabdf14610113578063d4f15f2414610126578063e5ed1d5914610147578063f6b4dfb41461015a57600080fd5b80631a60a4e51461008d5780631fe543e3146100c85780636898f82b146100dd578063a333903d146100f0575b600080fd5b6100b361009b366004610a23565b60009081526006602052604090206001015460ff1690565b60405190151581526020015b60405180910390f35b6100db6100d6366004610a52565b610185565b005b6100db6100eb366004610a23565b610212565b6100b36100fe366004610a23565b60056020526000908152604090205460ff1681565b6100db610121366004610b34565b610399565b610139610134366004610a23565b61043a565b6040519081526020016100bf565b6100db610155366004610a23565b610508565b60035461016d906001600160a01b031681565b6040516001600160a01b0390911681526020016100bf565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102045760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61020e8282610634565b5050565b80336007546040516331a9108f60e11b8152600481018490526001600160a01b039283169290911690636352211e90602401602060405180830381865afa158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102859190610b58565b6001600160a01b031614806102b45750600254600160501b90046001600160a01b0316336001600160a01b0316145b6102d05760405162461bcd60e51b81526004016101fb90610b75565b600082815260066020526040902060010154829060ff166103285760405162461bcd60e51b815260206004820152601260248201527147616d65206973206e6f742061637469766560701b60448201526064016101fb565b600083815260056020526040902054839060ff16156103895760405162461bcd60e51b815260206004820152601d60248201527f56697274756551756573743a20526f6c6c20696e2070726f677265737300000060448201526064016101fb565b6103928461075d565b5050505050565b600254600160501b90046001600160a01b0316336001600160a01b03161461040e5760405162461bcd60e51b815260206004820152602260248201527f56697274756551756573743a2075736572206973206e6f7420746865206f776e60448201526132b960f11b60648201526084016101fb565b600780546001600160a01b039092166001600160a01b0319928316811790915560038054909216179055565b600081815260066020526040812060010154829060ff166104925760405162461bcd60e51b815260206004820152601260248201527147616d65206973206e6f742061637469766560701b60448201526064016101fb565b600083815260056020526040902054839060ff16156104f35760405162461bcd60e51b815260206004820152601d60248201527f56697274756551756573743a20526f6c6c20696e2070726f677265737300000060448201526064016101fb565b50505060009081526006602052604090205490565b80336007546040516331a9108f60e11b8152600481018490526001600160a01b039283169290911690636352211e90602401602060405180830381865afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190610b58565b6001600160a01b031614806105aa5750600254600160501b90046001600160a01b0316336001600160a01b0316145b6105c65760405162461bcd60e51b81526004016101fb90610b75565b60008281526006602052604090206001818101805460ff19168217905590556105ee82610889565b6001600160a01b03167ffadb9547847a0c2c31f4c02590545e318d33d7aae99071caecf3fa4ce3cd7dca8360405161062891815260200190565b60405180910390a25050565b600060068260008151811061064b5761064b610bd2565b602002602001015161065d9190610be8565b610668906001610c0a565b60008481526004602090815260408083205480845260058352818420805460ff191690556006909252822054929350916106a3908490610c0a565b90506106ae816108fd565b600083815260066020526040902081905590506044819003610727576000828152600660205260409020600101805460ff19169055336001600160a01b03167f4dc08ce212d967a2959e5901a545b00fd4f86c108a0de62a8d906b7b0793c6d68360405161071e91815260200190565b60405180910390a25b8183867f0e3481671e003b6034626dacb1d41d4f2ba7c0b610c55de9685c51b685153ae560405160405180910390a45050505050565b600080546001546002546040516305d3b1d360e41b81526004810192909252600160a01b830467ffffffffffffffff166024830152640100000000810461ffff16604483015263ffffffff808216606484015266010000000000009091041660848201526001600160a01b0390911690635d3b1d309060a4016020604051808303816000875af11580156107f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108199190610c2b565b600081815260046020908152604080832086905585835260059091529020805460ff1916600117905590508161084e81610889565b6001600160a01b0316827fd2e5b7e86e0119aecac590ce5166e6c1b96b0d9b0a3e648c0ca46c90bdd587ba60405160405180910390a4919050565b6007546040516331a9108f60e11b8152600481018390526000916001600160a01b031690636352211e90602401602060405180830381865afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190610b58565b92915050565b600081600a0361090f57506017919050565b81600c0361091f57506008919050565b8160100361092f57506004919050565b8160110361093f57506045919050565b8160140361094f57506020919050565b8160160361095f5750603c919050565b8160180361096f57506007919050565b81601b0361097f57506029919050565b81601c0361098f57506032919050565b81602c0361099f57506009919050565b81602d036109af57506043919050565b81602e036109bf5750603e919050565b816034036109cf57506023919050565b816036036109df57506044919050565b816037036109ef57506002919050565b81603d036109ff57506003919050565b81603f03610a0f5750600d919050565b81604803610a1f57506033919050565b5090565b600060208284031215610a3557600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610a6557600080fd5b8235915060208084013567ffffffffffffffff80821115610a8557600080fd5b818601915086601f830112610a9957600080fd5b813581811115610aab57610aab610a3c565b8060051b604051601f19603f83011681018181108582111715610ad057610ad0610a3c565b604052918252848201925083810185019189831115610aee57600080fd5b938501935b82851015610b0c57843584529385019392850192610af3565b8096505050505050509250929050565b6001600160a01b0381168114610b3157600080fd5b50565b600060208284031215610b4657600080fd5b8135610b5181610b1c565b9392505050565b600060208284031215610b6a57600080fd5b8151610b5181610b1c565b60208082526037908201527f56697274756551756573743a2053656e64657220646f6573206e6f74206f776e60408201527f20746865206974656d206e6f7220617070726f76656421000000000000000000606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600082610c0557634e487b7160e01b600052601260045260246000fd5b500690565b808201808211156108f757634e487b7160e01b600052601160045260246000fd5b600060208284031215610c3d57600080fd5b505191905056fea26469706673582212201fa3b5893787768dd1779ab35b45ea82a12efee16ee36a20dec2997b691a905564736f6c63430008110033";

type VirtueQuestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VirtueQuestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VirtueQuest__factory extends ContractFactory {
  constructor(...args: VirtueQuestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "VirtueQuest";
  }

  deploy(
    subscriptionId: BigNumberish,
    _nftContract: string,
    _vrfCoordinator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VirtueQuest> {
    return super.deploy(
      subscriptionId,
      _nftContract,
      _vrfCoordinator,
      overrides || {}
    ) as Promise<VirtueQuest>;
  }
  getDeployTransaction(
    subscriptionId: BigNumberish,
    _nftContract: string,
    _vrfCoordinator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionId,
      _nftContract,
      _vrfCoordinator,
      overrides || {}
    );
  }
  attach(address: string): VirtueQuest {
    return super.attach(address) as VirtueQuest;
  }
  connect(signer: Signer): VirtueQuest__factory {
    return super.connect(signer) as VirtueQuest__factory;
  }
  static readonly contractName: "VirtueQuest";
  public readonly contractName: "VirtueQuest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VirtueQuestInterface {
    return new utils.Interface(_abi) as VirtueQuestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VirtueQuest {
    return new Contract(address, _abi, signerOrProvider) as VirtueQuest;
  }
}
