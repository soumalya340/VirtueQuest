/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VirtueQuestNFTNFT,
  VirtueQuestNFTNFTInterface,
} from "../VirtueQuestNFTNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_intialURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "flowContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerOrApproved",
        type: "address",
      },
    ],
    name: "AssetDestroyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metaDataURI",
        type: "string",
      },
    ],
    name: "AssetIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "reciepient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "accessMasterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "delegateIssue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "destroyAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "issue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "setTokenURIByOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600b805460ff191660011790553480156200001e57600080fd5b50604051620023913803806200239183398101604081905262000041916200017d565b83836000620000518382620002bf565b506001620000608282620002bf565b50600c91506200007390508382620002bf565b50600d80546001600160a01b0319166001600160a01b03929092169182179055600b8054610100600160a81b031916610100909202919091179055506200038b915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000e057600080fd5b81516001600160401b0380821115620000fd57620000fd620000b8565b604051601f8301601f19908116603f01168101908282118183101715620001285762000128620000b8565b816040528381526020925086838588010111156200014557600080fd5b600091505b838210156200016957858201830151818301840152908201906200014a565b600093810190920192909252949350505050565b600080600080608085870312156200019457600080fd5b84516001600160401b0380821115620001ac57600080fd5b620001ba88838901620000ce565b95506020870151915080821115620001d157600080fd5b620001df88838901620000ce565b94506040870151915080821115620001f657600080fd5b506200020587828801620000ce565b606087015190935090506001600160a01b03811681146200022557600080fd5b939692955090935050565b600181811c908216806200024557607f821691505b6020821081036200026657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ba57600081815260208120601f850160051c81016020861015620002955750805b601f850160051c820191505b81811015620002b657828155600101620002a1565b5050505b505050565b81516001600160401b03811115620002db57620002db620000b8565b620002f381620002ec845462000230565b846200026c565b602080601f8311600181146200032b5760008415620003125750858301515b600019600386901b1c1916600185901b178555620002b6565b600085815260208120601f198616915b828110156200035c578886015182559484019460019091019084016200033b565b50858210156200037b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ff6806200039b6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80634f6ccce7116100c357806370a082311161007c57806370a08231146102e957806395d89b41146102fc578063a22cb46514610304578063b88d4fde14610317578063c87b56dd1461032a578063e985e9c51461033d57600080fd5b80634f6ccce71461027657806354fd4d501461028957806355f804b3146102a85780636352211e146102bb5780636771309b146102ce5780636c0360eb146102e157600080fd5b8063211e6dbd11610115578063211e6dbd1461020457806323b872dd146102175780632f745c591461022a5780633cad9b0d1461023d57806342842e0e14610250578063474c15201461026357600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c55780630aa7c854146101da57806318160ddd146101f2575b600080fd5b61017061016b3660046118ab565b610379565b60405190151581526020015b60405180910390f35b61018d61038a565b60405161017c919061190e565b6101ad6101a8366004611921565b61041c565b6040516001600160a01b03909116815260200161017c565b6101d86101d3366004611951565b610443565b005b600b546101ad9061010090046001600160a01b031681565b6008545b60405190815260200161017c565b6101d8610212366004611a27565b61055d565b6101d8610225366004611a6e565b610601565b6101f6610238366004611951565b610633565b6101f661024b366004611aaa565b6106c9565b6101d861025e366004611a6e565b61073e565b6101d8610271366004611921565b610759565b6101f6610284366004611921565b610816565b600b546102969060ff1681565b60405160ff909116815260200161017c565b6101d86102b6366004611aaa565b6108a9565b6101ad6102c9366004611921565b61094b565b6101f66102dc366004611adf565b6109ab565b61018d610ab9565b6101f66102f7366004611b17565b610b47565b61018d610bcd565b6101d8610312366004611b40565b610bdc565b6101d8610325366004611b77565b610be7565b61018d610338366004611921565b610c1f565b61017061034b366004611bf3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600061038482610d2c565b92915050565b60606000805461039990611c26565b80601f01602080910402602001604051908101604052809291908181526020018280546103c590611c26565b80156104125780601f106103e757610100808354040283529160200191610412565b820191906000526020600020905b8154815290600101906020018083116103f557829003601f168201915b5050505050905090565b600061042782610d51565b506000908152600460205260409020546001600160a01b031690565b600061044e8261094b565b9050806001600160a01b0316836001600160a01b0316036104c05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104dc57506104dc813361034b565b61054e5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104b7565b6105588383610db3565b505050565b600d546001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d79190611c60565b6105f35760405162461bcd60e51b81526004016104b790611c7d565b6105fd8282610e21565b5050565b61060c335b82610e6d565b6106285760405162461bcd60e51b81526004016104b790611cc4565b610558838383610eec565b600061063e83610b47565b82106106a05760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104b7565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a8054600091826106da83611d27565b9091555050600a546106ec338261105d565b6106f68184610e21565b336001600160a01b0316817fdb2bfbc11c8a6350afe6406725431235c99ed05824d40daee07eae3d1fafb70b85604051610730919061190e565b60405180910390a392915050565b61055883838360405180602001604052806000815250610be7565b61076233610606565b6107cc5760405162461bcd60e51b815260206004820152603560248201527f56697274756551756573744e46543a2043616c6c6572206973206e6f7420746f6044820152741ad95b881bdddb995c881bdc88185c1c1c9bdd9959605a1b60648201526084016104b7565b6107d581611077565b807fc3a3686eed3b315ba4f3b1a0bf88b63a4525e3f27314495ba7dc0a40a6c4cd90336040516001600160a01b03909116815260200160405180910390a250565b600061082160085490565b82106108845760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104b7565b6008828154811061089757610897611d40565b90600052602060002001549050919050565b600d546001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156108ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109239190611c60565b61093f5760405162461bcd60e51b81526004016104b790611c7d565b600c6105fd8282611da4565b6000818152600260205260408120546001600160a01b0316806103845760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104b7565b600d546000906001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a289190611c60565b610a445760405162461bcd60e51b81526004016104b790611c7d565b600a8054906000610a5483611d27565b9091555050600a54610a66848261105d565b610a708184610e21565b836001600160a01b0316817fdb2bfbc11c8a6350afe6406725431235c99ed05824d40daee07eae3d1fafb70b85604051610aaa919061190e565b60405180910390a39392505050565b600c8054610ac690611c26565b80601f0160208091040260200160405190810160405280929190818152602001828054610af290611c26565b8015610b3f5780601f10610b1457610100808354040283529160200191610b3f565b820191906000526020600020905b815481529060010190602001808311610b2257829003601f168201915b505050505081565b60006001600160a01b038216610bb15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104b7565b506001600160a01b031660009081526003602052604090205490565b60606001805461039990611c26565b6105fd33838361111a565b610bf13383610e6d565b610c0d5760405162461bcd60e51b81526004016104b790611cc4565b610c19848484846111e8565b50505050565b6000818152600260205260409020546060906001600160a01b0316610c565760405162461bcd60e51b81526004016104b790611e64565b6000828152600e602052604090208054610c6f90611c26565b9050600003610c89576000610c8261121b565b9392505050565b6000828152600e602052604090208054610ca290611c26565b80601f0160208091040260200160405190810160405280929190818152602001828054610cce90611c26565b8015610d1b5780601f10610cf057610100808354040283529160200191610d1b565b820191906000526020600020905b815481529060010190602001808311610cfe57829003601f168201915b50505050509050919050565b919050565b60006001600160e01b0319821663780e9d6360e01b148061038457506103848261122a565b6000818152600260205260409020546001600160a01b0316610db05760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104b7565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610de88261094b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000828152600260205260409020546001600160a01b0316610e555760405162461bcd60e51b81526004016104b790611e64565b6000828152600e602052604090206105588282611da4565b600080610e798361094b565b9050806001600160a01b0316846001600160a01b03161480610ec057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610ee45750836001600160a01b0316610ed98461041c565b6001600160a01b0316145b949350505050565b826001600160a01b0316610eff8261094b565b6001600160a01b031614610f255760405162461bcd60e51b81526004016104b790611ea6565b6001600160a01b038216610f875760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104b7565b610f94838383600161127a565b826001600160a01b0316610fa78261094b565b6001600160a01b031614610fcd5760405162461bcd60e51b81526004016104b790611ea6565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6105fd828260405180602001604052806000815250611304565b60006110828261094b565b905061109281600084600161127a565b61109b8261094b565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b816001600160a01b0316836001600160a01b03160361117b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104b7565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6111f3848484610eec565b6111ff84848484611337565b610c195760405162461bcd60e51b81526004016104b790611eeb565b6060600c805461039990611c26565b60006001600160e01b031982166380ac58cd60e01b148061125b57506001600160e01b03198216635b5e139f60e01b145b8061038457506301ffc9a760e01b6001600160e01b0319831614610384565b6001600160a01b038416158061129757506001600160a01b038316155b6112f85760405162461bcd60e51b815260206004820152602c60248201527f56697274756551756573744e4654203a2041737365742063616e6e6f7420626560448201526b081d1c985b9cd9995c9c995960a21b60648201526084016104b7565b610c1984848484611438565b61130e838361156c565b61131b6000848484611337565b6105585760405162461bcd60e51b81526004016104b790611eeb565b60006001600160a01b0384163b1561142d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061137b903390899088908890600401611f3d565b6020604051808303816000875af19250505080156113b6575060408051601f3d908101601f191682019092526113b391810190611f7a565b60015b611413573d8080156113e4576040519150601f19603f3d011682016040523d82523d6000602084013e6113e9565b606091505b50805160000361140b5760405162461bcd60e51b81526004016104b790611eeb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ee4565b506001949350505050565b60018111156114a75760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016104b7565b816001600160a01b038516611503576114fe81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611526565b836001600160a01b0316856001600160a01b031614611526576115268582611705565b6001600160a01b0384166115425761153d816117a2565b611565565b846001600160a01b0316846001600160a01b031614611565576115658482611851565b5050505050565b6001600160a01b0382166115c25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104b7565b6000818152600260205260409020546001600160a01b0316156116275760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104b7565b61163560008383600161127a565b6000818152600260205260409020546001600160a01b03161561169a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104b7565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000600161171284610b47565b61171c9190611f97565b60008381526007602052604090205490915080821461176f576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906117b490600190611f97565b600083815260096020526040812054600880549394509092849081106117dc576117dc611d40565b9060005260206000200154905080600883815481106117fd576117fd611d40565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061183557611835611faa565b6001900381819060005260206000200160009055905550505050565b600061185c83610b47565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b031981168114610db057600080fd5b6000602082840312156118bd57600080fd5b8135610c8281611895565b6000815180845260005b818110156118ee576020818501810151868301820152016118d2565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610c8260208301846118c8565b60006020828403121561193357600080fd5b5035919050565b80356001600160a01b0381168114610d2757600080fd5b6000806040838503121561196457600080fd5b61196d8361193a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156119ac576119ac61197b565b604051601f8501601f19908116603f011681019082821181831017156119d4576119d461197b565b816040528093508581528686860111156119ed57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611a1857600080fd5b610c8283833560208501611991565b60008060408385031215611a3a57600080fd5b82359150602083013567ffffffffffffffff811115611a5857600080fd5b611a6485828601611a07565b9150509250929050565b600080600060608486031215611a8357600080fd5b611a8c8461193a565b9250611a9a6020850161193a565b9150604084013590509250925092565b600060208284031215611abc57600080fd5b813567ffffffffffffffff811115611ad357600080fd5b610ee484828501611a07565b60008060408385031215611af257600080fd5b611afb8361193a565b9150602083013567ffffffffffffffff811115611a5857600080fd5b600060208284031215611b2957600080fd5b610c828261193a565b8015158114610db057600080fd5b60008060408385031215611b5357600080fd5b611b5c8361193a565b91506020830135611b6c81611b32565b809150509250929050565b60008060008060808587031215611b8d57600080fd5b611b968561193a565b9350611ba46020860161193a565b925060408501359150606085013567ffffffffffffffff811115611bc757600080fd5b8501601f81018713611bd857600080fd5b611be787823560208401611991565b91505092959194509250565b60008060408385031215611c0657600080fd5b611c0f8361193a565b9150611c1d6020840161193a565b90509250929050565b600181811c90821680611c3a57607f821691505b602082108103611c5a57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611c7257600080fd5b8151610c8281611b32565b60208082526027908201527f56697274756551756573744e46543a2055736572206973206e6f742061757468604082015266037b934bd32b2160cd1b606082015260800190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201611d3957611d39611d11565b5060010190565b634e487b7160e01b600052603260045260246000fd5b601f82111561055857600081815260208120601f850160051c81016020861015611d7d5750805b601f850160051c820191505b81811015611d9c57828155600101611d89565b505050505050565b815167ffffffffffffffff811115611dbe57611dbe61197b565b611dd281611dcc8454611c26565b84611d56565b602080601f831160018114611e075760008415611def5750858301515b600019600386901b1c1916600185901b178555611d9c565b600085815260208120601f198616915b82811015611e3657888601518255948401946001909101908401611e17565b5085821015611e545787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526022908201527f56697274756551756573744e46543a204e6f6e2d4578697374656e7420417373604082015261195d60f21b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f70908301846118c8565b9695505050505050565b600060208284031215611f8c57600080fd5b8151610c8281611895565b8181038181111561038457610384611d11565b634e487b7160e01b600052603160045260246000fdfea26469706673582212207c544704a06bf9e8f1e09739d32d8e9cacab1c8cc13c5f74e3152491b2fcd28a64736f6c63430008110033";

type VirtueQuestNFTNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VirtueQuestNFTNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VirtueQuestNFTNFT__factory extends ContractFactory {
  constructor(...args: VirtueQuestNFTNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "VirtueQuestNFTNFT";
  }

  deploy(
    name: string,
    symbol: string,
    _intialURI: string,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VirtueQuestNFTNFT> {
    return super.deploy(
      name,
      symbol,
      _intialURI,
      flowContract,
      overrides || {}
    ) as Promise<VirtueQuestNFTNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    _intialURI: string,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      _intialURI,
      flowContract,
      overrides || {}
    );
  }
  attach(address: string): VirtueQuestNFTNFT {
    return super.attach(address) as VirtueQuestNFTNFT;
  }
  connect(signer: Signer): VirtueQuestNFTNFT__factory {
    return super.connect(signer) as VirtueQuestNFTNFT__factory;
  }
  static readonly contractName: "VirtueQuestNFTNFT";
  public readonly contractName: "VirtueQuestNFTNFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VirtueQuestNFTNFTInterface {
    return new utils.Interface(_abi) as VirtueQuestNFTNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VirtueQuestNFTNFT {
    return new Contract(address, _abi, signerOrProvider) as VirtueQuestNFTNFT;
  }
}
